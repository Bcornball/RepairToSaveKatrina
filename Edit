/*
 * File: KatrinaRepair
 * ---------------------
 * This program teaches Karel to repair the damage after Hurricane Katrina.
 *-----------------------
 */

/*
 * The KatrinaRepair function rebuilds houses along a hurricane-ravaged coastline 
 * containing only debris. Karel moves along 1st street looking for beepers that 
 * mark intersections on which houses once stood.  Each time it finds a beeper,
 * Karel builds a new house on that corner.
 */

function KatrinaRepair() {
   while (frontIsClear()) {
      if (beepersPresent()) {
      		(buildHouse()) {	   
      }
      		}
      if (frontIsClear()) {
         move();
      }
   }
}


/*
 * The buildHouse function builds a beeper house on stilts.
 * Precondition: Karel facing East at bottom of left stilt
 * Postcondition: Karel facing East at bottom of right stilt
 */

function buildHouse() {
	(PickUpBeeper);
	  function LeftStilt() {
	     (backup()){			
	       (putThreeBeepers()){        	//leftTurn In first line of code
	      }
	        }
	 } 
	/*NavigateToRightStilt*/
	turnright();
	move();
	move();
	turnright();
	move();
	move();
	turnleft();
		(putThreeBeepers()) {     //FirstPart of This FunctionBelow says turn left
	}
	/*CreateMiddleOfHouse*/
		(backup()){
	turnright();
	move();
	turnleft ();
		(putThreeBeepers()){
		}	
		moveNextToRightStilt());{           //Function Below
	}
	
	
}

/*
 * The putThreeBeepers function creates a line of three beepers.
 * Precondition: Karel is in the first square in the line
 * Postcondition: Karel is in the last square in the line
 */

function putThreeBeepers() {
	turn left();
	Repeat(3)	
	(PlaceBeeper);
	Repeat(2)
	move();
	
}
	
		


/*
 * The backUp function backs up one corner.
 * Precondition: There is an open square behind Karel
 * Postcondition: Karel is in that square facing the same direction.
 */
 
 function turnRight() {
	turnLeft ();
	turnLeft ();
	turnLeft ();
}
function turnAround() {
	turnLeft ();
	turnLeft ();
}
function backUp() {
	turnAround();
	move();
	turnAround();
}
function moveNextToRightStilt() {
 	turnRight ();
	turnRight ();
	Repeat Until (Street);
	move();
	Then
	turnLeft();
	move();
}

	
	
